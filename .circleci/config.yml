version: 2

jobs:
  build:
    docker:
      - image: python:3.7

    steps:
      - checkout

      - restore_cache:
          key: v1-py3-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: Create a virtualenv
          command: |
            mkdir -p /tmp/venv/openfisca_tunisia
            python -m venv /tmp/venv/openfisca_tunisia
            echo "source /tmp/venv/openfisca_tunisia/bin/activate" >> $BASH_ENV
            # Writes the command to a file which path is provided by the $BASH_ENV

      - run:
          name: Install tests dependencies
          command: |
            pip install --upgrade pip twine wheel
            pip install --editable .[tests] --upgrade
            # pip install --editable git+https://github.com/openfisca/openfisca-core.git@BRANCH_NAME#egg=OpenFisca-Core  # use a specific branch of OpenFisca-Core

      - run:
          name: Install notebook dependencies
          command: pip install --editable .[notebook] --upgrade

      - save_cache:
          key: v1-py3-{{ .Branch }}-{{ checksum "setup.py" }}
          paths:
            - /tmp/venv/openfisca_tunisia

      - run:
          name: Run tests and check notebooks
          command: make test

  deploy:
    docker:
      - image: python:3.7
        environment:
          PYPI_USERNAME: openfisca-bot
          # PYPI_PASSWORD: this value is set in CircleCI's web interface; do not set it here, it is a secret!

    steps:
      - checkout

      - restore_cache:
          key: v1-py3-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: Check for functional changes
          command: if ! .circleci/has-functional-changes.sh ; then circleci step halt ; fi

      - run:
          name: Upload a Python package to Pypi
          command: |
            source /tmp/venv/openfisca_tunisia/bin/activate
            .circleci/publish-python-package.sh

      - run:
          name: Publish a git tag
          command: .circleci/publish-git-tag.sh

  check_version_and_changelog:
    docker:
      - image: python:3.7
    steps:
      - checkout

      - run:
          name: Check version number has been properly updated
          command: |
            git fetch
            .circleci/is-version-number-acceptable.sh

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - check_version_and_changelog
      - deploy:
          requires:
            - build
            - check_version_and_changelog
          filters:
            branches:
              only: master
